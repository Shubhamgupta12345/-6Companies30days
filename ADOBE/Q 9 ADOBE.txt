/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     int ans=0;
    int sum(TreeNode*root,int &cnt)
    {
        if(root==NULL)
        {
            return 0;
        }
        
        cnt++;
        int l=sum(root->left,cnt);
        int r=sum(root->right,cnt);
        return root->val+l+r;

    }
    void help(TreeNode*root)
    {
        if(root==NULL)
        {
            return;
        }
        int cnt=0;
        int average=(sum(root,cnt))/cnt;
        if(root->val==average)
        {
            ans++;
        }
        help(root->left);
        help(root->right);
        
    }
    int averageOfSubtree(TreeNode* root) {
          ans=0;
          help(root);
          return ans;
                  
    }
};

class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        vector<int>v;
        int a=(p2[1]-p1[1])*(p2[1]-p1[1])+(p2[0]-p1[0])*(p2[0]-p1[0]);
        int b=(p2[1]-p3[1])*(p2[1]-p3[1])+(p2[0]-p3[0])*(p2[0]-p3[0]);
        int c=(p3[1]-p4[1])*(p3[1]-p4[1])+(p3[0]-p4[0])*(p3[0]-p4[0]);
        int d=(p4[1]-p1[1])*(p4[1]-p1[1])+(p4[0]-p1[0])*(p4[0]-p1[0]);
        int e=(p3[1]-p1[1])*(p3[1]-p1[1])+(p3[0]-p1[0])*(p3[0]-p1[0]);
        int f=(p2[1]-p4[1])*(p2[1]-p4[1])+(p2[0]-p4[0])*(p2[0]-p4[0]);
       map<int,int>mp;
       mp[a]++;
       mp[b]++;
       mp[c]++;
       mp[d]++;
       mp[e]++;
       mp[f]++;

       if(mp.size()==2)
       {
           for(auto x:mp)
           {
               if(x.second%2!=0||x.first==0)
               {
                   return 0;
               }
           }

           return true;
       }
       return false;

    }
};
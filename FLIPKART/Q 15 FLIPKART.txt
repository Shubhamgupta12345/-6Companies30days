/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  int help(map<TreeNode*,int>&mp,TreeNode*root)
  {
      if(root==NULL)
      {
          return 0;
      }
      int ans=root->val;
      if(mp.find(root)!=mp.end())
      {
          return mp[root];
      }

      if(root->left!=NULL)
      {
          ans+=help(mp,root->left->left)+help(mp,root->left->right);

      }
       if(root->right!=NULL)
      {
          ans+=help(mp,root->right->left)+help(mp,root->right->right);
          
      }
      return mp[root]=max(ans,help(mp,root->left)+help(mp,root->right));
  }
    int rob(TreeNode* root) {
      map<TreeNode*,int>mp;
      return help(mp,root);      
    }
};
class Solution {
public:
   bool isSubstring(string s, string m)
{
 
    if (s.find(m) != string::npos)
        return 1;
    return 0;
}
    string dtb(int n)
    {
         string str;
      while(n){
      if(n & 1) // 1
        str+='1';
      else // 0
        str+='0';
      n>>=1; // Right Shift by 1 
    }   
    reverse(str.begin(),str.end());
      return str;
    }

    bool hasAllCodes(string s, int k) {
        int n=pow(2,k)-1;
        string x;
        for(int i=0;i<k;i++)
        {
            x+='0';
        }
        if(isSubstring(s,x)==0)
        {
            return 0;
        }
        if(k>=15)
        {
            return 1;
        }
        for(int i=0;i<=n;i++)
        {
            if(isSubstring(s,dtb(i))==0)
            {
                return 0;
            }
        }
        return 1;

    }
};
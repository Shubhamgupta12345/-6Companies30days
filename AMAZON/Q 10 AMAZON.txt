class Solution {
public:
  bool help(string &s,string t)
  {
      
      if(t.size()>s.size())
      {
          return 0;
      }
      int i=0,j=0;
      while(i<s.size()&&j<t.size())
      {
          if(s[i]==t[j])
          {
              i++;
              j++;
          }
          else
          {
              i++;
          }
      }
      if(j==t.size())
      {
          return 1;
      }
      return 0;
  }
    int numMatchingSubseq(string s, vector<string>& words) {
             int cnt=0;
            
           unordered_map<string,int>mp;
           for(int i=0;i<words.size();i++)
           {
               mp[words[i]]++;
           }     
           for(auto x:mp)
           {
               if(help(s,x.first)==1)
               {
                   cnt+=x.second;
               }
           }
             return cnt;
    }
};